name: Run Tests

on:
  push:
    branches:
      - '*'
  pull_request:

jobs:
  test:
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        # bash on macos and linux
        # powershell on windows + strawberry perl
        # msys2 {0} on windows + msys2
        shell: >-
          ${{   fromJSON( '["", "bash {0}"]'       )[ startsWith(matrix.os, 'ubuntu-' ) || startsWith(matrix.os, 'macos-') ]
          }}${{ fromJSON( '["", "powershell {0}"]' )[ startsWith(matrix.os, 'windows-') && matrix.dist == 'strawberry'     ]
          }}${{ fromJSON( '["", "msys2 {0}"]'      )[ startsWith(matrix.os, 'windows-') && matrix.dist == 'msys2'          ] }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        perl-version: ['5.8', '5.20', '5.30', '5.34']
        alien-install-type: [ 'system', 'share' ]
        include:
          - { perl-version: '5.34' , os: windows-latest , dist: strawberry , alien-install-type: 'share'  }
          - { perl-version: '5.34' , os: windows-latest , dist: msys2      , alien-install-type: 'system' }
          - { perl-version: '5.34' , os: windows-latest , dist: msys2      , alien-install-type: 'share'  }
          - { perl-version: '5.34' , os: macos-11       ,                    alien-install-type: 'system' }
          - { perl-version: '5.34' , os: macos-11       ,                    alien-install-type: 'share'  }
    name: Perl ${{ matrix.perl-version }} on ${{ matrix.os }} with install-type ${{ matrix.alien-install-type }}, dist ${{ matrix.dist }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # Setup system PCRE2
      - name: Setup system PCRE2 (apt)
        if: runner.os == 'Linux' && matrix.alien-install-type == 'system'
        run: |
          sudo apt-get -y update && sudo apt-get install -y libpcre2-dev
      - name: Setup system PCRE2 (homebrew)
        if: runner.os == 'macOS' && matrix.alien-install-type == 'system'
        run: |
          brew install pcre2
      - name: Set up MSYS2
        uses: msys2/setup-msys2@v2
        if: runner.os == 'Windows' && matrix.dist == 'msys2'
        with:
          update: true
          install: >-
            base-devel
            mingw-w64-x86_64-toolchain
            mingw-w64-x86_64-perl
      - name: Set up PCRE2 (MSYS2/MinGW pacman)
        if: runner.os == 'Windows' && matrix.dist == 'msys2' && matrix.alien-install-type == 'system'
        shell: msys2 {0}
        run: |
          pacman -S --needed --noconfirm mingw-w64-x86_64-pcre2

      # Setup Perl
      - name: Set up perl
        uses: shogo82148/actions-setup-perl@v1
        if: matrix.os != 'windows-latest'
        with:
          perl-version: ${{ matrix.perl-version }}
      - name: Set up perl (Strawberry)
        uses: shogo82148/actions-setup-perl@v1
        if: matrix.os == 'windows-latest' && matrix.dist == 'strawberry'
        with:
          distribution: 'strawberry'

      - run: perl -V
      - name: Install cpanm
        if: runner.os == 'Windows' && matrix.dist == 'msys2'
        run:
          yes | cpan -T App::cpanminus || true

      - name: Install Perl deps
        run: |
          cpanm --notest Alien::Build::MM
          cpanm --notest --installdeps .

      - name: Set ALIEN_INSTALL_TYPE
        shell: bash
        run: |
          echo "ALIEN_INSTALL_TYPE=${{ matrix.alien-install-type }}" >> $GITHUB_ENV

      - name: Run tests
        run: |
          cpanm --verbose --test-only .
